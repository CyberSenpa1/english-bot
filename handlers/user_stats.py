from aiogram import Router, types, F
from db.core import async_session
from db.models import user_statistics
from keyboards.user_kb import start_kb
from db.models import answer_logs
from sqlalchemy import select
from db.requests import get_problem_words

router = Router()

@router.message(F.text.lower() == "—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")
async def show_stats(message: types.Message):
    async with async_session() as session:
        try:
            # –û—Å–Ω–æ–≤–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
            stats = await session.execute(
                select(user_statistics)
                .where(user_statistics.c.user_id == message.from_user.id)
            )
            stats = stats.mappings().one_or_none()
            
            # –ü—Ä–æ–±–ª–µ–º–Ω—ã–µ —Å–ª–æ–≤–∞
            problem_words = await get_problem_words(message.from_user.id)
            
            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            text = (
                f"üìä <b>–í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</b>\n\n"
                f"üéØ –í—ã—É—á–µ–Ω–æ —Å–ª–æ–≤: {stats['learned_words']}/{stats['total_words']}\n"
                f"üìà –¢–æ—á–Ω–æ—Å—Ç—å: {stats['accuracy']*100:.1f}%\n"
                f"üî• –°–µ—Ä–∏—è –¥–Ω–µ–π: {stats['streak']}\n\n"
                f"üîÑ –ü–æ—Å–ª–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: {stats['last_active'].strftime('%d.%m.%Y')}\n\n"
                f"‚ö†Ô∏è <b>–°–ª–æ–∂–Ω—ã–µ —Å–ª–æ–≤–∞:</b>\n"
            )
            
            for word in problem_words:
                text += f"- {word['english']} ({word['wrong_attempts']} –æ—à–∏–±–æ–∫)\n"
        except:
            await message.answer("–ü–æ–∫–∞ –Ω–µ—Ç—É —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏")
        
        await message.answer(text, parse_mode="HTML")